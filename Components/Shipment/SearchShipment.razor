@page "/shipment/search"

@using _4PL.Data
@using Microsoft.AspNetCore.Components.QuickGrid

@inject IJSRuntime JS
@inject NavigationManager NavManager
@inject HttpClient HttpClient

@rendermode InteractiveServer

<h5 class="mt-3">Search Shipment</h5>
<EditForm Model="shipment" OnSubmit="Search" Enhance>
    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                <label>Job No</label>
                <InputText class="form-control" @bind-Value="shipment.Job_No" />
            </div>
            <div class="col-md-3">
                <label>Master BL No</label>
                <InputText class="form-control" @bind-Value="shipment.Master_BL_No" />
            </div>
            <div class="col-md-3">
                <label>Place Of Loading Name</label>
                <InputText class="form-control" @bind-Value="shipment.Place_Of_Loading_Name" />
            </div>
            <div class="col-md-3">
                <label>Place Of Discharge Name</label>
                <InputText class="form-control" @bind-Value="shipment.Place_Of_Discharge_Name" />
            </div>
        </div>
    
        <div class="row">
            <div class="col-md-3">
                <label>Vessel Name</label>
                <InputText class="form-control" @bind-Value="shipment.Vessel_Name" />
            </div>
            <div class="col-md-3">
                <label>Voyage No</label>
                <InputText class="form-control" @bind-Value="shipment.Voyage_No" />
            </div>
            <div class="col-md-1" style="width: 12.499999995%">
                <label>ETD From</label>
                <InputDate class="form-control" @bind-Value="shipment.ETD_Date_From" />
            </div>
            <div class="col-md-1" style="width: 12.499999995%">
                <label>ETD To</label>
                <InputDate class="form-control" @bind-Value="shipment.ETD_Date_To" />
            </div>
            <div class="col-md-1" style="width: 12.499999995%">
                <label>ETA From</label>
                <InputDate class="form-control" @bind-Value="shipment.ETA_Date_From" />
            </div>
            <div class="col-md-1" style="width: 12.499999995%">
                <label>ETA To</label>
                <InputDate class="form-control" @bind-Value="shipment.ETA_Date_To" />
            </div>
        </div>

        <div class="row">
            <div class="col-md-3">
                <label>Container No</label>
                <InputText class="form-control" @bind-Value="container.Container_No" />
            </div>
            <div class="col-md-3">
                <label>Container Type</label>
                <InputText class="form-control" @bind-Value="container.Container_Type" />
            </div>
            <div class="col-md-1">
                <button type="submit" class="btn btn-sm mt-2 btn-primary mt-md-4">Search</button>
            </div>
        </div>
    </div>

</EditForm>

<div class="result-container py-4" style="max-width:85vw">
    <QuickGrid Items="@shipments" Pagination="@pagination">
        <TemplateColumn Title="Job No" >
            <a href="/shipment/view?Shipment_Job_No=@context.Job_No" class="text-decoration-none font-weight-bold">
                @context.Job_No
            </a>
        </TemplateColumn>
        <PropertyColumn Title="Master BL No" Property="@(s => s.Master_BL_No)" Sortable="true" />
        <PropertyColumn Title="Container Mode" Property="@(s => s.Container_Mode)" Sortable="true" />
        <PropertyColumn Title="Place Of Loading ID" Property="@(s => s.Place_Of_Loading_ID)" Sortable="true" />
        <PropertyColumn Title="Place Of Loading Name" Property="@(s => s.Place_Of_Loading_Name)" Sortable="true" />
        <PropertyColumn Title="Place Of Discharge ID" Property="@(s => s.Place_Of_Discharge_ID)" Sortable="true" />
        <PropertyColumn Title="Place Of Discharge Name" Property="@(s => s.Place_Of_Discharge_Name)" Sortable="true" />
        <PropertyColumn Title="Vessel Name" Property="@(s => s.Vessel_Name)" Sortable="true" />
        <PropertyColumn Title="Voyage No" Property="@(s => s.Voyage_No)" Sortable="true" />
        <PropertyColumn Title="ETD Date" Property="@(s => s.ETD_Date.Date.ToShortDateString())" Sortable="true" />
        <PropertyColumn Title="ETA Date" Property="@(s => s.ETA_Date.Date.ToShortDateString())" Sortable="true" />
        <PropertyColumn Title="Carrier Matchcode" Property="@(s => s.Carrier_Matchcode)" Sortable="true" />
        <PropertyColumn Title="Carrier Name" Property="@(s => s.Carrier_Name)" Sortable="true" />
        <PropertyColumn Title="Carrier Contract No" Property="@(s => s.Carrier_Contract_No)" Sortable="true" />
        <PropertyColumn Title="Carrier Booking Reference No" Property="@(s => s.Carrier_Booking_Reference_No)" Sortable="true" />
        <PropertyColumn Title="Inco Terms" Property="@(s => s.Inco_Terms)" Sortable="true" />
        <PropertyColumn Title="Controlling Customer Name" Property="@(s => s.Controlling_Customer_Name)" Sortable="true" />
        <PropertyColumn Title="Shipper Name" Property="@(s => s.Shipper_Name)" Sortable="true" />
        <PropertyColumn Title="Consignee Name" Property="@(s => s.Consignee_Name)" Sortable="true" />
        <PropertyColumn Title="Total No Of Pieces" Property="@(s => s.Total_No_Of_Pieces)" Sortable="true" />
        <PropertyColumn Title="Package Type" Property="@(s => s.Package_Type)" Sortable="true" />
        <PropertyColumn Title="Total No Of Volume Weight MTQ" Property="@(s => s.Total_No_Of_Volume_Weight_MTQ)" Sortable="true" />
        <PropertyColumn Title="Total No Of Gross Weight KGM" Property="@(s => s.Total_No_Of_Gross_Weight_KGM)" Sortable="true" />
        <PropertyColumn Title="Description" Property="@(s => s.Description)" Sortable="true" />
        <PropertyColumn Title="Shipment Note" Property="@(s => s.Shipment_Note)" Sortable="true" />
        <TemplateColumn Title ="Actions">
            <button class="btn btn-sm btn-success" @onclick="() => navigateEdit(context.Job_No)">Edit</button>
            <button class="btn btn-sm btn-danger" @onclick="() => DeleteShipment(context.Job_No)">Delete</button>
        </TemplateColumn>
    </QuickGrid>
    <Paginator State="@pagination" />
</div>

<style>
    .result-container {
        width: 100%;
        overflow-x: auto;
    }

    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        font-size: 14px;
    }

    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #dddddd;
    }
</style>

@code {
    [SupplyParameterFromForm]
    ShipmentSearchModel shipment { get; set; } = new();
    Container container { get; set; } = new();

    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    IQueryable<Shipment> shipments = Enumerable.Empty<Shipment>().AsQueryable();


    public async void Search()
    {
        var result = await getShipmentData();
        if (result != null && result.Any())
        {
            shipments = result.AsQueryable();
            StateHasChanged();
        } else
        {
            await JS.InvokeVoidAsync("alert", $"No shipment found");
        }
        
    }

    async Task<List<Shipment>> getShipmentData()
    {
        string Job_No = string.IsNullOrEmpty(shipment.Job_No) ? "%" : shipment.Job_No;
        string Master_BL_No = string.IsNullOrEmpty(shipment.Master_BL_No) ? "%" : shipment.Master_BL_No;
        string Place_Of_Loading_Name = string.IsNullOrEmpty(shipment.Place_Of_Loading_Name) ? "%" : shipment.Place_Of_Loading_Name;
        string Place_Of_Discharge_Name = string.IsNullOrEmpty(shipment.Place_Of_Discharge_Name) ? "%" : shipment.Place_Of_Discharge_Name;
        string Vessel_Name = string.IsNullOrEmpty(shipment.Vessel_Name) ? "%" : shipment.Vessel_Name;
        string Voyage_No = string.IsNullOrEmpty(shipment.Voyage_No) ? "%" : shipment.Voyage_No;
        DateTime ETD_Date_From = shipment.ETD_Date_From;
        DateTime ETD_Date_To = shipment.ETD_Date_To;
        DateTime ETA_Date_From = shipment.ETA_Date_From;
        DateTime ETA_Date_To = shipment.ETA_Date_To;
        string Container_No = string.IsNullOrEmpty(container.Container_No) ? "%" : container.Container_No;
        string Container_Type = string.IsNullOrEmpty(container.Container_Type) ? "%" : container.Container_Type;

        return await HttpClient.GetFromJsonAsync<List<Shipment>>($"{NavManager.BaseUri}api/Shipment/Search?Job_No={Job_No}&Master_BL_No={Master_BL_No}&Place_Of_Loading_Name={Place_Of_Loading_Name}&Place_Of_Discharge_Name={Place_Of_Discharge_Name}&Vessel_Name={Vessel_Name}&Voyage_No={Voyage_No}&Container_No={Container_No}&Container_Type={Container_Type}&ETD_Date_From={ETD_Date_From}&ETD_Date_To={ETD_Date_To}&ETA_Date_From={ETA_Date_From}&ETA_Date_To={ETA_Date_To}");
    }


    private void navigateEdit(string Job_No)
    {
        NavManager.NavigateTo($"/shipment/edit?Shipment_Job_No={Job_No}");
    }

    private void navigateView(string Job_No)
    {
        NavManager.NavigateTo($"/shipment/view?Shipment_Job_No={Job_No}");
    }

    async Task DeleteShipment(string Job_No)
    {
        var response = await HttpClient.DeleteAsync($"{NavManager.BaseUri}api/shipment/DeleteShipment/{Job_No}");
        if (response.IsSuccessStatusCode)
        {
            var result = await getShipmentData();
            shipments = result.AsQueryable();
            StateHasChanged();
            await JS.InvokeVoidAsync("alert", $"Shipment {Job_No} has been deleted");
        }
        else
        {
            Console.WriteLine("Error deleting shipment");
        }
    }

    public class ShipmentSearchModel
    {
        public string Job_No { get; set; }
        public string Master_BL_No { get; set; }
        public string Place_Of_Loading_Name { get; set; }
        public string Place_Of_Discharge_Name { get; set; }
        public string Vessel_Name { get; set; }
        public string Voyage_No { get; set; }
        public DateTime ETD_Date_From { get; set; }
        public DateTime ETD_Date_To { get; set; }
        public DateTime ETA_Date_From { get; set; }
        public DateTime ETA_Date_To { get; set; }


        public ShipmentSearchModel()
        {
            this.Job_No = "";
            this.Master_BL_No = "";
            this.Place_Of_Loading_Name = "";
            this.Place_Of_Discharge_Name = "";
            this.Vessel_Name = "";
            this.Voyage_No = "";
            this.ETD_Date_From = new DateTime(DateTime.Now.Year, 1, 1);
            this.ETD_Date_To = DateTime.Now;
            this.ETA_Date_From = new DateTime(DateTime.Now.Year, 1, 1);
            this.ETA_Date_To = DateTime.Now;
        }
    }
}