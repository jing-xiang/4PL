@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using _4PL.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject HttpClient HttpClient
@inject IConfiguration Configuration
@inject ILogger<Login> Logger

<PageTitle>Forgot your password?</PageTitle>

<div align="center" style="margin:50px">
    <div class="col-md-4">
        <section>
                <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
                    <DataAnnotationsValidator />
                    <h1>Forgot your password?</h1>
                    <hr />
                    <ValidationSummary class="text-danger" role="alert" />
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div style="margin-bottom:10px" class="text-danger">@errorMessage</div>
                    }
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                        <label for="email" class="form-label">Email</label>
                    </div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Reset password</button>
                </EditForm>
        </section>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private string? errorMessage;

    private string? apiBaseUrl;

    protected override void OnInitialized()
    {
        apiBaseUrl = Configuration["ApiBaseUrl"];
    }

    private async Task OnValidSubmitAsync()
    {
        var response = await HttpClient.PostAsJsonAsync($"{apiBaseUrl}/api/Snowflake/ForgotPassword", Input.Email);
        if (!response.IsSuccessStatusCode)
        {
            Logger.LogInformation($"Error {response.StatusCode}");
            errorMessage = await response.Content.ReadAsStringAsync();
            return;
        }



        // // For more information on how to enable account confirmation and password reset please
        // // visit https://go.microsoft.com/fwlink/?LinkID=532713
        // var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        // code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        // var callbackUrl = NavigationManager.GetUriWithQueryParameters(
        //     NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
        //     new Dictionary<string, object?> { ["code"] = code });

        // await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
