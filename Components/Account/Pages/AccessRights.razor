@page "/Account/AccessRights"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using _4PL.Data
@using Snowflake.Data

@inject UserManager<ApplicationUser> UserManager
@inject IUserStore<ApplicationUser> UserStore
@inject SignInManager<ApplicationUser> SignInManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject ILogger<Register> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@inject IConfiguration Configuration
@inject HttpClient HttpClient
@inject SnowflakeDbContext DbContext

<PageTitle>Access Rights</PageTitle>

<h3>AccessRights</h3>

<div>
<table border="1">
        <thead>
        <tr>
            <th colspan="4">Rate Card</th>
            <th colspan="4">Shipment</th>
            <th colspan="4">Shipment Auto Rating</th>
        </tr>
        </thead>
        <thead>
        <tr>
            <td>Read</td>
            <td>Modify</td>
            <td>Import</td>
            <td>Delete</td>
            <td>Read</td>
            <td>Modify</td>
            <td>Import</td>
            <td>Delete</td>
            <td>Read</td>
            <td>Modify</td>
            <td>Import</td>
            <td>Delete</td>
        </tr>
        </thead>
        <tbody>
            <tr>
                <td>&#9989;</td>
                <td>&#9989;</td>
                <td>&#9989;</td>
                <td>&#9989;</td>
                <td>&#9989;</td>
                <td>&#9989;</td>
                <td>&#9989;</td>
                <td>&#9989;</td>
                <td>&#9989;</td>
                <td>&#9989;</td>
                <td>&#9989;</td>
                <td>&#9989;</td>
            </tr>
        </tbody>
    </table>
</div>


<div align="center">
    <div class="col-md-4">
        <EditForm Model="Input" asp-route-returnUrl="@ReturnUrl" method="post" OnValidSubmit="FetchAccessRights" FormName="fetchaccessrights">
            <DataAnnotationsValidator />
            <hr />
            <ValidationSummary class="text-danger" />
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div style="margin-bottom:10px" class="text-danger">@errorMessage</div>
            }
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Name" class="form-control" autocomplete="username" aria-required="true" placeholder="name" />
                <label for="name">Name</label>
            </div>

            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label for="email">Email</label>
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">View Access Rights</button>
        </EditForm>
    </div>
</div>


@code {
    [SupplyParameterFromForm]
    private UserRegisterModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    private string? errorMessage;

    private string? apiBaseUrl;

    protected override void OnInitialized()
    {
        apiBaseUrl = Configuration["ApiBaseUrl"];
    }

    public async Task FetchAccessRights(EditContext editContext)
    {

        var response = await HttpClient.PostAsJsonAsync($"{apiBaseUrl}/api/AccessRights/FetchAccessRights", Input.Email);
        if (!response.IsSuccessStatusCode)
        {
            errorMessage = await response.Content.ReadAsStringAsync();
            return;
        }

        Logger.LogInformation("User access rights found.");
        Logger.LogInformation(response.Content.ReadAsStringAsync().Result);
        //TODO: Display access rights
    }

    private sealed class UserRegisterModel
    {
        [Required]
        public string Name { get; set; } = "";

        [Required]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } = "";
    }
}